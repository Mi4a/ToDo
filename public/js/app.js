const app=angular.module("app",["ngRoute","ngResource"]);app.config(function(o){o.when("/",{templateUrl:"../HTML/start.html",controller:""}).when("/todo",{templateUrl:"../HTML/todoListTemplate.html",controller:""}).when("/new",{templateUrl:"../HTML/newTodoTemplate.html",controller:""}).otherwise({redirectTo:"/"})}),app.directive("loginForm",function(){return{restrict:"E",templateUrl:"../HTML/loginTemplate.html",controller:"loginController",controllerAs:"log"}}),app.controller("loginController",function(o,e,t,n){o.name=t.userName||!1,o.username="",o.password="",o.dataLoading=!1,o.login=function(){let a=$.param({username:o.username,password:o.password});o.dataLoading=!0,n.post("/users/login",a,{headers:{"Content-Type":"application/x-www-form-urlencoded;charset=utf-8"}}).then(function(n){n!==[]?(t.userName=n.data.data.user.username,console.log(t.userName),o.dataLoading=!1,e.path("/todo")):(o.dataLoading=!1,alert("Some error happened! Try enter login/password one more time!"))},function(e){console.log(e),o.dataLoading=!1,alert("Invalid login/password! Please try again!")})},o.registration=function(){let a=$.param({username:o.username,password:o.password});o.dataLoading=!0,n.post("/users/registration",a,{headers:{"Content-Type":"application/x-www-form-urlencoded;charset=utf-8"}}).then(function(o){console.log(o),t.userName=o.data.data.user.username,alert("Thank you for registration!"),e.path("/todo")},function(e){o.dataLoading=!1,console.log(e.statusText),alert("User already exist")})}}),app.controller("newTodoController",function(o,e,t,n){o.todoId=n.todoId||!1,o.newTodo="",o.username=n.userName||!1,o.cancel=function(){t.path("/todo")},o.createNewTodo=function(){let n={username:o.username,description:o.newTodo};o.todoId&&(n.id=o.todoId);let a=$.param(n);e.post("/todo",a,{headers:{"Content-Type":"application/x-www-form-urlencoded;charset=utf-8"}}).then(function(e){console.log(e),o.newTodo="",alert("New Todo added!"),t.path("/todo")},function(o){console.log(o),alert("New Todo not added! Sorry!")})}}),app.controller("todoListController",function(o,e,t,n){o.todoList=[],o.userName=n.userName||"Someones",e.get("/todo/"+o.userName).then(e=>{console.log(e.data.data.todo),o.todoList=e.data.data.todo},o=>console.log("Shit heppends")),o.createNewTodo=function(){t.path("/new")},o.editTodo=function(o){n.todoId=o,t.path("/new")},o.delete=function(t){let n=$.param({username:o.userName,id:t.id}),a=o.todoList.indexOf(t);e.post("/todo/delete",n,{headers:{"Content-Type":"application/x-www-form-urlencoded;charset=utf-8"}}).then(function(e){console.log(e),alert("Todo deleted!"),o.todoList.splice(a,1)},function(o){console.log(o),alert("We cant delete this")})}}),app.directive("logoutButton",function(){return{restrict:"E",templateUrl:"../HTML/logoutButtonTemplate.html",controller:"logoutController"}}),app.controller("logoutController",function(o,e,t,n){o.logout=function(){t.get("/users/logout").then(function(){console.log("Logout succeed"),n.userName=!1,e.path("/")},function(){console.log("Logout went wrong")})}});